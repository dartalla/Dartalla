<?php

namespace DoctrineORMModule\Proxy\__CG__\Sponsor\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Sponsor extends \Sponsor\Entity\Sponsor implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'sponsorId', 'sponsorResidenceTime', 'sponsorResidenceType', 'sponsorResidenceRentValue', 'person', 'bankAccount', 'references');
        }

        return array('__isInitialized__', 'sponsorId', 'sponsorResidenceTime', 'sponsorResidenceType', 'sponsorResidenceRentValue', 'person', 'bankAccount', 'references');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Sponsor $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getSponsorId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getSponsorId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsorId', array());

        return parent::getSponsorId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSponsorId($sponsorId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSponsorId', array($sponsorId));

        return parent::setSponsorId($sponsorId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSponsorResidenceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsorResidenceType', array());

        return parent::getSponsorResidenceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setSponsorResidenceType($sponsorResidenceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSponsorResidenceType', array($sponsorResidenceType));

        return parent::setSponsorResidenceType($sponsorResidenceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getSponsorResidenceTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsorResidenceTime', array());

        return parent::getSponsorResidenceTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSponsorResidenceTime($sponsorResidenceTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSponsorResidenceTime', array($sponsorResidenceTime));

        return parent::setSponsorResidenceTime($sponsorResidenceTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getSponsorResidenceRentValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsorResidenceRentValue', array());

        return parent::getSponsorResidenceRentValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setSponsorResidenceRentValue($sponsorResidenceRentValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSponsorResidenceRentValue', array($sponsorResidenceRentValue));

        return parent::setSponsorResidenceRentValue($sponsorResidenceRentValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerson()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerson', array());

        return parent::getPerson();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerson($person)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerson', array($person));

        return parent::setPerson($person);
    }

    /**
     * {@inheritDoc}
     */
    public function getBankAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBankAccount', array());

        return parent::getBankAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setBankAccount($bankAccount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBankAccount', array($bankAccount));

        return parent::setBankAccount($bankAccount);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferences', array());

        return parent::getReferences();
    }

    /**
     * {@inheritDoc}
     */
    public function addReference(\Reference\Entity\Reference $reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReference', array($reference));

        return parent::addReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($references)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($references));

        return parent::setReference($references);
    }

}
