<?php

namespace DoctrineORMModule\Proxy\__CG__\Company\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Company extends \Company\Entity\Company implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'companyId', 'companyUid', 'companyName', 'companyFancyName', 'companyCnpj', 'companySubscription', 'companyRepresentativeName', 'companyRepresentativePhone', 'companyTimestamp', 'companyIsMaster', 'companyIsActive', 'address', 'contact', 'user', 'children', 'companySelf');
        }

        return array('__isInitialized__', 'companyId', 'companyUid', 'companyName', 'companyFancyName', 'companyCnpj', 'companySubscription', 'companyRepresentativeName', 'companyRepresentativePhone', 'companyTimestamp', 'companyIsMaster', 'companyIsActive', 'address', 'contact', 'user', 'children', 'companySelf');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Company $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getCompanyUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyUid', array());

        return parent::getCompanyUid();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress(\Person\Entity\Address $address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', array());

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setContact(\Person\Entity\Contact $contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', array($contact));

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getCompanyId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyId', array());

        return parent::getCompanyId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyName', array());

        return parent::getCompanyName();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyFancyName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyFancyName', array());

        return parent::getCompanyFancyName();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyCnpj()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyCnpj', array());

        return parent::getCompanyCnpj();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanySubscription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanySubscription', array());

        return parent::getCompanySubscription();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyRepresentativeName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyRepresentativeName', array());

        return parent::getCompanyRepresentativeName();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyRepresentativePhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyRepresentativePhone', array());

        return parent::getCompanyRepresentativePhone();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyTimestamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyTimestamp', array());

        return parent::getCompanyTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyIsActive', array());

        return parent::getCompanyIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyId($companyId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyId', array($companyId));

        return parent::setCompanyId($companyId);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyUid($companyUid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyUid', array($companyUid));

        return parent::setCompanyUid($companyUid);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyName($companyName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyName', array($companyName));

        return parent::setCompanyName($companyName);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyFancyName($companyFancyName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyFancyName', array($companyFancyName));

        return parent::setCompanyFancyName($companyFancyName);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyCnpj($companyCnpj)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyCnpj', array($companyCnpj));

        return parent::setCompanyCnpj($companyCnpj);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanySubscription($companySubscription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanySubscription', array($companySubscription));

        return parent::setCompanySubscription($companySubscription);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyRepresentativeName($companyRepresentativeName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyRepresentativeName', array($companyRepresentativeName));

        return parent::setCompanyRepresentativeName($companyRepresentativeName);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyRepresentativePhone($companyRepresentativePhone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyRepresentativePhone', array($companyRepresentativePhone));

        return parent::setCompanyRepresentativePhone($companyRepresentativePhone);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyTimestamp($companyTimestamp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyTimestamp', array($companyTimestamp));

        return parent::setCompanyTimestamp($companyTimestamp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyIsMaster()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyIsMaster', array());

        return parent::getCompanyIsMaster();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyIsMaster($companyIsMaster)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyIsMaster', array($companyIsMaster));

        return parent::setCompanyIsMaster($companyIsMaster);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyIsActive($companyIsActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyIsActive', array($companyIsActive));

        return parent::setCompanyIsActive($companyIsActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\User\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', array($children));

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanySelf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanySelf', array());

        return parent::getCompanySelf();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanySelf($companySelf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanySelf', array($companySelf));

        return parent::setCompanySelf($companySelf);
    }

}
